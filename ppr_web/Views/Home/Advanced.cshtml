@model ppr_web.Models.AdvancedSearch

@{
    ViewBag.Title = "Advanced";
}

<div class="text-center">
    <h2>Map of Properties from the Property Price Register Database</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">

        <div class="panel-info col-xs-12 col-md-12">
            <div class="panel-heading">Options</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-3 col-xs-12">
                        @Html.LabelFor(model => model.County, new { @class = "col-md-6 col-xs-12" })
                        @Html.DropDownListFor(model => model.County, new SelectList(ppr_web.Models.SearchDB.Counties), new { @id = "counties-dropdown", @onchange = "showDublinDropdown()", @Title = "list of counties", @class = "col-md-6 col-xs-12" })
                    </div>
                    <div class="col-md-3 col-xs-12" id="toggle-postcode-dropdown">
                        @Html.LabelFor(model => model.PostCode, new { @class = "col-md-6 col-xs-12" })
                        @Html.DropDownListFor(model => model.PostCode, new SelectList(ppr_web.Models.SearchDB.PostalCodes), new { @Title = "list of post codes", @class = "col-md-6 col-xs-12" })
                    </div>
                    <div class="col-md-6 col-xs-12">
                        @Html.LabelFor(model => model.Area, new { @class = "col-md-4 col-xs-12" })
                        @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @Title = "choose an area in the county", @class = "col-md-8 col-xs-12" },@id="areaSelectBox" })
                    </div>
                </div>
                <div class="padding-top-25">
                    <input type="submit" value="Generate Map" class="btn btn-default" id="submit-button" />
                </div>
                <div class="padding-top-25">
                    *  On the map <font color="red">RED</font> icons represent properties that sold for above the median average
                    price and <font color="green">GREEN</font> icons are properties below the median average price
</div>
            </div>
        </div>

        <div id="map" class="col-xs-12 col-md-12">
            
        </div>
    </div>

}

<div class="padding-top-25">
    @Html.ActionLink("Back to Home Page", "Index")
</div>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1YdK2EZU8p7EA760nPD06iL39rOdA5kg&callback=initMap" async defer></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC1YdK2EZU8p7EA760nPD06iL39rOdA5kg&libraries=places"></script>
<script type="text/javascript">
    var map;
    var geocoder;
    var medians;

    function initMap() {
        if (typeof map=='undefined') {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 53.2734, lng: -7.778320310000026 },
                zoom: 6
            });
        }
        geocoder = new google.maps.Geocoder();

        $('#submit-button').click(function () {
            $('#submit-button').val('Generating Map...');
            $('#submit-button').css("background", "green");
        });
    }

    if ('@IsPost' === 'True') {
        $(window).load(function () {
            sortMap();
        });
    }

    function sortMap() {
        var collection = @Html.Raw(Json.Encode(@Model.getDictionary));
        medians = @Html.Raw(Json.Encode(@Model.getMedianList));
        var countyAddress='@Model.County';
        geocoder.geocode( { 'address': countyAddress}, function(results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                map.setCenter(results[0].geometry.location);
            }});
        $.each(collection, function (key, value) {
            var collectionList=value;
            var year=key;
            $.each(collectionList, function (key1,value1) {
                var address=value1.Address+", "+countyAddress;
                var price=value1.Price;
                var markerLabel;
                var iconImage;
                var median=underMedian(year,price);
                var contentString = '<div><b>'+address+'</b></div><div>'+year+'</div>'+'<div>€'+parseFloat(price.toFixed(0)).toLocaleString()+'</div>';
                if(value1.Description==='N'){
                    contentString+='<div>New Property</div>';
                }
                else{
                    contentString+='<div>Second Hand Property</div>';
                }
                address+=", "+countyAddress+", Ireland";
                geocoder.geocode( { 'address': address}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var infowindow = new google.maps.InfoWindow({
                            content: contentString
                        });
                        var marker = new google.maps.Marker({
                            map: map,
                            position: results[0].geometry.location
                        });
                        if(median){
                            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');
                        }
                        else{
                            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/green-dot.png');
                        }
                        marker.addListener('click', function() {
                            infowindow.open(map, marker);
                        });
                    }
                });
            });
        });
        map.setZoom(9);
    }
    function underMedian(year,price){
        var result;
        var median;
        if(year==='2016'){
            median=medians[0];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        if(year==='2015'){
            median=medians[1];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        if(year==='2014'){
            median=medians[2];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        if(year==='2013'){
            median=medians[3];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        if(year==='2012'){
            median=medians[4];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        if(year==='2011'){
            median=medians[5];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        if(year==='2010'){
            median=medians[6];
            if(median>price){
                result=false;
            }
            else{
                result=true;
            }
        }
        return result;
    }

</script>
}

